import React, {useCallback, useReducer} from 'react';import {View} from "react-native";import Input from "./Input";import {Feather} from "@expo/vector-icons";import SubmitButton from "./SubmitButton";import {validateEmail, validatePassword, validateString} from "../utils/ValidationConstraints";import {validateInput} from "../utils/actions/FormActions";import {reducer} from "../utils/reducers/FormReducer";import {signUp} from "../utils/actions/AuthActionos";const initialState = {    inputValues: {        email: "",        password: ""    },    inputValidities: {        email: false,        password: false    },    formIsValid: false}const SignInForm = props => {    const authHandler = () => {        signUp(            formState.inputValues.email,            formState.inputValues.password,        )    }    const [formState, dispatchFormState] = useReducer(reducer, initialState);    const inputChangedHandler = useCallback((inputId, inputValue) => {        //validate Input User's        const result = validateInput(inputId, inputValue);        dispatchFormState({ inputId,validationResult: result, inputValue });    }, [dispatchFormState])    return (        <View>            <Input id="email"                   label="Email"                   icon="mail"                   iconPack={Feather}                   // mặc định tất cả chữ cái là chữ thường                   autoCapitalize="none"                   //chỉ định loại bàn phím sẽ dùng để nhập văn bản                   keyboardType="email-address"                   onInputChanged={inputChangedHandler}                   errorText={formState.inputValidities["email"]}            />            <Input id="password"                   label="Password"                   icon="lock"                   iconPack={Feather}                   // mặc định tất cả chữ cái là chữ thường                   autoCapitalize="none"                   // vô hiệu hoá và ẩn văn bản                   secureTextEntry                   onInputChanged={inputChangedHandler}                   errorText={formState.inputValidities["password"]}            />            <SubmitButton title={'Sign in'}                          onPress={ authHandler }                          style={{ marginTop: 20 }}                          disabled={!formState.formIsValid}            />        </View>    )}export default SignInForm;