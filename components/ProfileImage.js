import React, {useState} from "react";import {Image, View, StyleSheet, TouchableOpacity} from "react-native";import usersImage from '../assets/userImage.jpeg';import Colors from "../constants/Colors";import { FontAwesome } from '@expo/vector-icons';import {launchImagePicker, uploadImageAsync} from "../utils/ImagePickerHelper";import { updateSignedInUserData } from "../utils/actions/AuthActions";import {useDispatch} from "react-redux";import {updateLoggedInUserData} from "../store/authSlice";const ProfileImage = props => {    const dispatch = useDispatch();    const source = props.uri ? { uri: props.uri } : usersImage;    const [image, setImage] = useState(source);    const userId = props.userId;    const pickImage = async () => {        try {            const tempUri = await launchImagePicker();            if (!tempUri) return;            //upload the image            const uploadUrl = await uploadImageAsync(tempUri);            if (!uploadUrl){                throw new error("Cloud not upload image");            }            const newData = { profilePicture: uploadUrl };            await updateLoggedInUserData(userId, newData);            dispatch(updateLoggedInUserData({ newData }));            setImage({ uri: tempUri });        }        catch (error) {            console.log(error);        }    }    return (        <TouchableOpacity onPress={pickImage}>            <Image                style={{ ...styles.image , ...{ width: props.size, height: props.size }}}                source={image}            />            <View style={styles.editIconContainer}>                <FontAwesome name="pencil" size={15} color="black" />            </View>        </TouchableOpacity>    )}const styles = StyleSheet.create({    image: {        borderRadius: 50,        borderWidth: 1,        borderColor: Colors.gray    },    editIconContainer: {        position: "absolute",        bottom: 0,        right: 0,        backgroundColor: Colors.lightGray,        borderRadius: 20,        padding: 8    }})export default ProfileImage;