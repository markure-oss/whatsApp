import React, {useCallback, useEffect, useState} from "react";import {    View,    Text,    StyleSheet,    ImageBackground,    Button,    TextInput,    TouchableOpacity,    KeyboardAvoidingView} from "react-native";import backgroundChat from "../assets/backgroundChat.jpg";import {SafeAreaView} from "react-native-safe-area-context";//icons fyiimport {Feather} from '@expo/vector-icons';import Colors from "../constants/Colors";import {useSelector} from "react-redux";import PageContainer from "../components/PageContainer";import Bubble from "../components/Bubble";const ChatScreen = (props) => {    const userData = useSelector(state => state.auth.userData);    const storedUsers = useSelector(state => state.users.storedUsers);    const [chatUsers, setChatUsers] = useState([]);    const [messageText, setMessageText] = useState("");    const [chatId, setChatId] = useState(props.route?.params?.chatId);    const chatData = props.route?.params?.newChatData;    const getChatTitleFromName = () => {        const otherUserId = chatUsers.find(uid => uid !== userData.userId);        const otherUserData = storedUsers[otherUserId];        return otherUserData && `${otherUserData.firstName} ${otherUserData.lastName}`;    }    useEffect(() => {        props.navigation.setOptions({            headerTitle: getChatTitleFromName()        })        setChatUsers(chatData.users)    }, [chatUsers])    //send message    const sendMessage = useCallback(() => {        setMessageText("");    }, [messageText])    return (        <SafeAreaView            //Handling safeAreaView            edges={['right', 'left', 'bottom']}            style={styles.container}>            <KeyboardAvoidingView style={styles.Screen}                                  behavior="padding"                                  keyboardVerticalOffset={100}            >                <ImageBackground source={backgroundChat} style={styles.imageBackground}>                    {                        !chatId && <Bubble text='say hi! Im new chat' type='system' />                    }                </ImageBackground>                <View style={styles.inputContainer}>                    <TouchableOpacity                        style={styles.mediaButton}                        onPress={() => console.log("image!!")}>                        <Feather name="plus" size={24} color={Colors.blue}/>                    </TouchableOpacity>                    <TextInput style={styles.textBox}                               value={messageText}                               onChangeText={text => setMessageText(text)}                               onSubmitEditing={sendMessage}                    />                    {/*showing a send button as the user types*/}                    {                        messageText === "" &&                        <TouchableOpacity                            style={styles.mediaButton}                            onPress={() => console.log("image!!")}>                            <Feather name="camera" size={24} color={Colors.blue}/>                        </TouchableOpacity>                    }                    {                        messageText !== "" &&                        <TouchableOpacity                            style={{...styles.mediaButton, ...styles.sendButton}}                            onPress={sendMessage}>                            <Feather name="send" size={20} color={'white'}/>                        </TouchableOpacity>                    }                </View>            </KeyboardAvoidingView>        </SafeAreaView>    )}const styles = StyleSheet.create({    container: {        flex: 1,        flexDirection: "column"    },    Screen: {        flex: 1    },    imageBackground: {        flex: 1,        opacity: 0.85    },    inputContainer: {        flexDirection: "row",        paddingVertical: 6,        paddingHorizontal: 10,        height: 50    },    textBox: {        flex: 1,        borderWidth: 1,        borderRadius: 50,        borderColor: Colors.lightGray,        marginHorizontal: 15,        paddingHorizontal: 12    },    mediaButton: {        alignItems: 'center',        justifyContent: 'center',        width: 35    },    sendButton: {        backgroundColor: Colors.blue,        borderRadius: 50,        padding: 8    }})export default ChatScreen;