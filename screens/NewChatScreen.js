import React, {useEffect, useState} from "react";import {View, Text, StyleSheet, Button, TextInput} from "react-native";import {HeaderButtons, Item} from "react-navigation-header-buttons";import CustomHeaderButton from "../components/CustomHeaderButton";import PageContainer from "../components/PageContainer";import {FontAwesome} from "@expo/vector-icons";import Colors from "../constants/Colors";import CommonStyles from '../constants/CommonStyles'import {retry} from "@reduxjs/toolkit/query";const NewChatScreen = props => {    const [isLoading, setIsLoading] = useState(false);    const [users, setUsers] = useState([]);    const [noResultsFound, setNoResultsFound] = useState(true);    const [searchTerm, setSearchTerm] = useState('');    useEffect(() => {        props.navigation.setOptions({            headerLeft: () => {                return <HeaderButtons HeaderButtonComponent={CustomHeaderButton}>                    <Item                        title={"Close"}                        iconName=""                        onPress={() => props.navigation.goBack()}                    />                </HeaderButtons>            },            headerTitle: "New chat"        })    }, [])    useEffect(() => {        const delaySearch = setTimeout(() => {            console.log("abc")            if (!searchTerm || searchTerm === "") {                setUsers();                setNoResultsFound(false);                return;            }            setIsLoading(true);            setUsers({});            setNoResultsFound(true);            setIsLoading(false);        }, 500);        return () => clearTimeout(delaySearch);    }, [searchTerm])    return <PageContainer>        <View style={styles.searchContainer}>            <FontAwesome name="search" size={15} color={Colors.lightGray} />            <TextInput                placeholder='Search'                style={styles.searchBox}                onChangeText={(text) => setSearchTerm(text) }            />        </View>        {            !isLoading && noResultsFound && (                <View style={CommonStyles.center}>                    <FontAwesome                        name="question"                        size={55}                        color={Colors.lightGray}                        style={styles.noResultsIcon}                    />                    <Text style={styles.noResultsText}>                        No user found                    </Text>                </View>            )        }        {            !isLoading && !users && (                <View style={CommonStyles.center}>                    <FontAwesome                        name="users"                        size={55}                        color={Colors.lightGray}                        style={styles.noResultsIcon}                    />                    <Text style={styles.noResultsText}>                        Enter a name to search for a user                    </Text>                </View>            )        }    </PageContainer>}const styles = StyleSheet.create({    container: {        flex: 1,        justifyContent: "center",        alignItems: "center"    },    searchContainer: {        flexDirection: "row",        alignItems: "center",        backgroundColor: Colors.extraLightGrey,        height: 30,        marginVertical: 8,        paddingHorizontal: 8,        paddingVertical: 8,        borderRadius: 5    },    searchBox: {        marginLeft: 8,        fontSize: 15,        width: "100%"    },    noResultsIcon: {        marginBottom: 20    },    noResultsText: {        color: Colors.textColor,        fontFamily: "regular",        letterSpacing: 0.3    }})export default NewChatScreen;